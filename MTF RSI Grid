// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© jmosullivan

// @version=5
// Created By jmosullivan
// MTF RSI Grid

// The relative strength index (RSI) is a momentum indicator that measures the magnitude of recent price changes to evaluate 
// overbought or oversold conditions. The RSI is normally displayed as an oscillator separately from price and can have a 
// reading from 0 to 100. This indicator displays the current RSI levels at up to 6 timeframes (of your choosing) in a grid. 
// If the RSI levels reach overbought (above 70) or oversold (below 30) conditions, it changes the color to help you see that 
// RSI has reached extreme levels. Note that in tradingview, when the chart is on a higher timeframe, the lower timeframe RSI 
// levels don't calculate properly, so this indicator will hide those values in the grid. If none of your selected values are 
// available, it hides the table completely. There are a lot of nice configuration options, like:
// 
// * Position the grid in any corner of the screen
// * Style customization (color, thickness, size)
// * Customize RSI length

indicator(title='MTF RSI Grid', overlay=true)

import jmosullivan/Utilities/12
import jmosullivan/PrivateTable/7

// Configuration
grp = "Layout"
verticalOffset    = input.int         (group=grp, defval=0,                         title="Vertical Offset", options=[0, 1, 2, 3])
position          = input.string      (group=grp, defval=position.top_right,        title="Position",   options=[position.top_right, position.bottom_right, position.bottom_left])
showTitle         = input.bool        (group=grp, defval=true,                      title="Show Title")
textSize          = input.string      (group=grp, defval=size.small,                title="Text Size",  options=[size.tiny, size.small, size.normal])
colorModerateText = input.color       (group=grp, defval=color.white,             title="Moderate Color Text / BG", inline="1")
colorModerate     = input.color       (group=grp, defval=color.rgb(40, 98, 255),  title="", inline="1")
colorExtremeText  = input.color       (group=grp, defval=color.white,             title="Extreme Color Text / BG", inline="2")
colorExtreme      = input.color       (group=grp, defval=color.rgb(235, 46, 175), title="", inline="2")
length            = input.int         (group=grp, defval=14,                        title="RSI Length")

grp2   = "Timeframes"
var string[] timeframeShortHandArray = array.from("1m", "3m", "5m", "15m", "30m", "45m", "1h", "2h", "3h", "4h", "12h", "1D", "1W", "1M")
var string[] timeframeArray = array.from("1", "3", "5", "15", "30", "45", "60", "120", "180", "240", "1440", "D", "W", "M")
show1  = input.bool(defval=true, title="", inline="tf1", group=grp2)
show2  = input.bool(defval=true, title="", inline="tf2", group=grp2)
show3  = input.bool(defval=true, title="", inline="tf3", group=grp2)
show4  = input.bool(defval=true, title="", inline="tf4", group=grp2)
show5  = input.bool(defval=true, title="", inline="tf5", group=grp2)
show6  = input.bool(defval=true, title="", inline="tf6", group=grp2)
tfToolTip = "The number values represent minutes, so 60 = 1 hour, 120 = 2 hours, 180 = 3 hours, 240 = 4 hours, 1440 = 12 hours, D = 1 day, W = 1 week, M = 1 month. Alert conditions based on these values are stacked, so for the alerts to begin firing, at a minimum the first 3 rsi timeframes defined must all be >= 70 or <= 30 together. For every additional RSI value to join the group beyond the first three, you will get a different superstack level alert, eg: first 3 = Superstack 3; first 4 = Superstack 4; first 5 = Superstack 5; all 6 = Superstack 6."
timeframe1 = input.timeframe(defval="5", title="", inline="tf1", group=grp2, tooltip=tfToolTip, options=["1", "3", "5", "15", "30", "45", "60", "120", "180", "240", "1440", "D", "W", "M"])
timeframe2 = input.timeframe(defval="15", title="", inline="tf2", group=grp2, tooltip=tfToolTip, options=["1", "3", "5", "15", "30", "45", "60", "120", "180", "240", "1440", "D", "W", "M"])
timeframe3 = input.timeframe(defval="60", title="", inline="tf3", group=grp2, tooltip=tfToolTip, options=["1", "3", "5", "15", "30", "45", "60", "120", "180", "240", "1440", "D", "W", "M"])
timeframe4 = input.timeframe(defval="240", title="", inline="tf4", group=grp2, tooltip=tfToolTip, options=["1", "3", "5", "15", "30", "45", "60", "120", "180", "240", "1440", "D", "W", "M"])
timeframe5 = input.timeframe(defval="D", title="", inline="tf5", group=grp2, tooltip=tfToolTip, options=["1", "3", "5", "15", "30", "45", "60", "120", "180", "240", "1440", "D", "W", "M"])
timeframe6 = input.timeframe(defval="W", title="", inline="tf6", group=grp2, tooltip=tfToolTip, options=["1", "3", "5", "15", "30", "45", "60", "120", "180", "240", "1440", "D", "W", "M"])

// Arrays to be built up by the indicator
dataArray = array.new_string()
bgColorArray = array.new_color()
textColorArray = array.new_color()
superstackTFArray = array.new<string>()
superstackOBArray = array.new<bool>()
superstackOSArray = array.new<bool>()

// Functions
getTimeframeShortHand(tf) =>
    ix = array.indexof(timeframeArray, tf)
    na(ix) ? tf : array.get(timeframeShortHandArray, ix)

requestSecurityProxy(_tickerid, _timeframe, _expression) => 
    request.security(_tickerid, _timeframe, _expression, lookahead=barmerge.lookahead_on)

requestSecurityLower(tickerid, timeframe, expression) =>
    _timeframe = timeframe.in_seconds('') < timeframe.in_seconds(timeframe) ? '' : timeframe
    array<float> lowerTimeframeArray = request.security_lower_tf(syminfo.tickerid, _timeframe, expression)
    array.size(lowerTimeframeArray) > 0 ? array.get(lowerTimeframeArray, array.size(lowerTimeframeArray) - 1) : na

requestSecurity(tickerid, timeframe, expression) =>
    timeframe.in_seconds('') < timeframe.in_seconds(timeframe) ? requestSecurityProxy(tickerid, timeframe, expression) : requestSecurityLower(tickerid, timeframe, expression)

addTimeframe(timeframe, rsi, show) =>
    if (show)
        shortHandTF = getTimeframeShortHand(timeframe)
        oversold = rsi >= 70
        overbought = rsi <= 30
        bgColor = oversold or overbought ? colorExtreme : colorModerate
        textColor = oversold or overbought ? colorExtremeText : colorModerateText
        array.push(superstackTFArray, shortHandTF)
        array.push(superstackOBArray, overbought)
        array.push(superstackOSArray, oversold)
        array.push(dataArray, str.format(" {0} \n {1,number,#} ", shortHandTF, rsi))
        array.push(bgColorArray, bgColor)
        array.push(textColorArray, textColor)

// Logic

rsi = ta.rsi(close, length)
rsi1 = requestSecurity(syminfo.tickerid, timeframe1, rsi)
rsi2 = requestSecurity(syminfo.tickerid, timeframe2, rsi)
rsi3 = requestSecurity(syminfo.tickerid, timeframe3, rsi)
rsi4 = requestSecurity(syminfo.tickerid, timeframe4, rsi)
rsi5 = requestSecurity(syminfo.tickerid, timeframe5, rsi)
rsi6 = requestSecurity(syminfo.tickerid, timeframe6, rsi)

if barstate.islast
    // Build up the array to be rendered
    if (showTitle)
        array.push(dataArray, " RSI ")
        array.push(bgColorArray, colorExtreme)
        array.push(textColorArray, colorExtremeText)

    addTimeframe(timeframe1, rsi1, show1)
    addTimeframe(timeframe2, rsi2, show2)
    addTimeframe(timeframe3, rsi3, show3)
    addTimeframe(timeframe4, rsi4, show4)
    addTimeframe(timeframe5, rsi5, show5)
    addTimeframe(timeframe6, rsi6, show6)

    int dataSize = array.size(dataArray)
    if (showTitle)
        dataSize -= 1

    if dataSize > 0
	    PrivateTable.fromArray(dataArray, bgColorArray, textColorArray, position, verticalOffset, false, textSize, 2, "\n")

// Alert Conditions
overbought1 = rsi1 >= 70 and show1
overbought2 = rsi2 >= 70 and show2
overbought3 = rsi3 >= 70 and show3
overbought4 = rsi4 >= 70 and show4
overbought5 = rsi5 >= 70 and show5
overbought6 = rsi6 >= 70 and show6
oversold1 = rsi1 <= 30 and show1
oversold2 = rsi2 <= 30 and show2
oversold3 = rsi3 <= 30 and show3
oversold4 = rsi4 <= 30 and show4
oversold5 = rsi5 <= 30 and show5
oversold6 = rsi6 <= 30 and show6
superstackOb3 = overbought1 and overbought2 and overbought3
superstackOb4 = overbought1 and overbought2 and overbought3 and overbought4
superstackOb5 = overbought1 and overbought2 and overbought3 and overbought4 and overbought5
superstackOb6 = overbought1 and overbought2 and overbought3 and overbought4 and overbought5 and overbought6
superstackOs3 = oversold1 and oversold2 and oversold3
superstackOs4 = oversold1 and oversold2 and oversold3 and oversold4
superstackOs5 = oversold1 and oversold2 and oversold3 and oversold4 and oversold5
superstackOs6 = oversold1 and oversold2 and oversold3 and oversold4 and oversold5 and oversold6

// Alerts
alertcondition(superstackOb3, title="Superstack: 3 Overbought", message="{{exchange}}:{{ticker}} Superstack: 3 timeframes overbought")
alertcondition(superstackOb4, title="Superstack: 4 Overbought", message="{{exchange}}:{{ticker}} Superstack: 4 timeframes overbought")
alertcondition(superstackOb5, title="Superstack: 5 Overbought", message="{{exchange}}:{{ticker}} Superstack: 5 timeframes overbought")
alertcondition(superstackOb6, title="Superstack: 6 Overbought", message="{{exchange}}:{{ticker}} Superstack: 6 timeframes overbought")
alertcondition(superstackOs3, title="Superstack: 3 Oversold",   message="{{exchange}}:{{ticker}} Superstack: 3 timeframes oversold")
alertcondition(superstackOs4, title="Superstack: 4 Oversold",   message="{{exchange}}:{{ticker}} Superstack: 4 timeframes oversold")
alertcondition(superstackOs5, title="Superstack: 5 Oversold",   message="{{exchange}}:{{ticker}} Superstack: 5 timeframes oversold")
alertcondition(superstackOs6, title="Superstack: 6 Oversold",   message="{{exchange}}:{{ticker}} Superstack: 6 timeframes oversold")
alertcondition(superstackOb3 or superstackOs3, title="Superstack: 3 Overbought/Oversold", message="{{exchange}}:{{ticker}} Superstack: 3 timeframes overbought or oversold")
alertcondition(superstackOb4 or superstackOs4, title="Superstack: 4 Overbought/Oversold", message="{{exchange}}:{{ticker}} Superstack: 4 timeframes overbought or oversold")
alertcondition(superstackOb5 or superstackOs5, title="Superstack: 5 Overbought/Oversold", message="{{exchange}}:{{ticker}} Superstack: 5 timeframes overbought or oversold")
alertcondition(superstackOb6 or superstackOs6, title="Superstack: 6 Overbought/Oversold", message="{{exchange}}:{{ticker}} Superstack: 6 timeframes overbought or oversold")
